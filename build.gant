ant.property(file: 'build.properties')
def antProps = ant.project.properties
sourceDirectory = 'src'
buildDirectory = 'classes'
libDir = 'lib'
includeTargets << gant.targets.Clean
cleanPattern << ['**/*~', '*.jar', '*.zip']
cleanDirectory << buildDirectory
clobberPattern << "${libDir}/groovy-all.jar"

ant.taskdef(name : 'groovyc', classname : 'org.codehaus.groovy.ant.Groovyc')
ant.taskdef(resource : 'org/tigris/subversion/svnant/svnantlib.xml') {
  classpath { fileset(dir:"${antProps.'svnant.home'}/lib", includes:'*.jar') }
}

target(compile : 'Compile source to build directory.') {
  mkdir(dir : buildDirectory)
  groovyc(srcdir : sourceDirectory , destdir : buildDirectory) {
    classpath { fileset(dir:libDir, includes:'*.jar') }
  }
}

target(properties : 'Show all of the available properties') {
  new TreeMap(antProps).each { key, value -> println("$key: $value") }
}

target('create-jar' : 'Create the jar file') {
  depends(compile)
  ant.copy(file:"${antProps.'groovy.home'}/embeddable/groovy-all-1.6.2.jar",
           tofile:"$libDir/groovy-all.jar")
  jar(destfile:"${antProps.'project.name'}.jar", basedir:buildDirectory) {
    manifest {
      attribute(name:'Main-Class', value:'com.grovehillsoftware.reportbuilder.MainFrame')
      attribute(name:'Class-Path',
                value:". $libDir/groovy-all.jar $libDir/jcalendar.jar $libDir/looks.jar")
    }
  }
}

target('package' : 'Package up the release') {
  depends('create-jar')
  zip(destfile : "${antProps.'project.name'}_revSomething.zip") {
    fileset(dir : '.') {
      include(name : '*.jar')
      include(name : 'lib/**')
      include(name : 'LICENSE.txt')
      include(name : 'src/**')
    }
  }
}

setDefaultTarget('package')